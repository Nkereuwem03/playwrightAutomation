name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    # Grant permissions for the GITHUB_TOKEN to deploy to GitHub Pages
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        # Use `npm test` to also trigger the `posttest` script for badge generation
        run: npm test
        env:
          REQRES_API_KEY: ${{ secrets.REQRES_API_KEY }}
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}

      - name: Commit test results badge
        if: github.event_name == 'push'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Update test results badge"
          file_pattern: "test-results/badge-summary.json"

      - name: Generate Allure Report
        if: always()
        run: npm run allure:generate

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: ./allure-report
          retention-days: 30

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report

      - name: Report Status to Slack
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: "C093AMTV8TT"
          slack-message: |
            ${{ job.status == 'success' && 'âœ…' || 'ðŸš¨' }} *Playwright Test Run: `${{ job.status }}`*
            *Repository*: `${{ github.repository }}`
            *Branch*: `${{ github.ref_name }}`
            <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow Run & Artifacts>
            ${{ job.status == 'success' && format('\n*Report*: <{0}/{1}|View Deployed Report>', github.server_url, github.repository) || '' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
